{% extends 'layout.twig' %}

{% set pageTitle = 'Lista de la semana' %}
{% block pageContent %}
<link rel="stylesheet" href="{{ app.request.baseUrl }}/assets/css/printPage.css"/>
<div id="toRemove">
	<a class="btn btn-info buttonright"  id="toRemove1" role="button" onclick="savePage()"> <span class="glyphicon glyphicon-print" aria-hidden="true"></span> Guardar lista</a>
	<a class="btn btn-info buttonleft"  id="toRemove2" role="button" onclick="printPage()"> <span class="glyphicon glyphicon-print" aria-hidden="true"></span> Imprimir lista</a>
	<a href="{{path('voluntarios.overview')}}" class="btn btn-info buttonleft"  id="toRemove3" role="button"> <span class="glyphicon glyphicon-triangle-left" aria-hidden="true"></span> Atras</a>
</div>
<div id="toPrint">

	
	
	<h2 style="text-align: left;">{{months["now"|date("m")]|capitalize}}</h2>
	<h2 style="text-align: left;">Semana {{currentWeek}}: {{weekStart}} - {{weekEnd}}</h2>

	<!--<table class="table-bordered">
		<thead>
			<tr>
				{% for day in days %}
				<th>{{day}}</th>
				{% endfor %}
			</tr>
		</thead>
		<tbody>
			<tr>
				{% for i in 1..5 %}
				<td>
					{% if workdays[i] != null %}
					{% for day in workdays[i] %}
					<p>Nombre: {{ day["Nombre"] }}</p>
					<p>Organización: {{ day["Inst"] }}</p>
					<p >Horas acumuladas: {{ day["tiempo"] }}</p>	
					{% endfor %}
					{% endif %}
				</td>
				{% endfor %}
				
			</tr>

		</tbody>
	</table>-->
	
	<table class="table-bordered" id="fillMeUp">
		<thead>
			<tr>
				{% for day in days %}
				<th>{{day}}</th>
				{% endfor %}
			</tr>
		</thead>
		<tbody>
			
		</tbody>
	</table>

</div>

<script type="text/javascript" src="{{ app.request.baseUrl }}/assets/js/jquery.js"></script>
<script type="text/javascript" src="{{ app.request.baseUrl }}/assets/js/jspdf.js"></script>
<script>
	var monthNames = [
	"Enero", 
	"Febrero", 
	"Marzo",
	"Abril", 
	"Mayo", 
	"Junio", 
	"Julio",
	"Agosto", 
	"Septiembre",
	"Octubre",
	"Noviembre", 
	"Diciembre"
	];
	function printPage() {
		var prtContent = document.getElementById("toPrint");
		// window.open('', '', 'left=0,top=0,'height=' + screen.height + ',width=' + screen.width + ',toolbar=0,scrollbars=0,status=0');
		var WinPrint =	window.open('', '','height=' + screen.height + ',width=' + screen.width + ',resizable=yes,scrollbars=yes,toolbar=yes,menubar=yes,location=yes')
		WinPrint.document.write('<link rel="stylesheet" href="{{ app.request.baseUrl }}/assets/css/bootstrap.css"/>');
		setTimeout(100);
		/**WinPrint.document.write('<link rel="stylesheet" href="{{ app.request.baseUrl }}/assets/css/printLista.css"/>');
		setTimeout(100);**/
		WinPrint.document.write(prtContent.innerHTML);
		setTimeout(100);
		WinPrint.document.close();
		setTimeout(100);
		WinPrint.focus();
		setTimeout(100)
		WinPrint.print();
		setTimeout(100)
		WinPrint.close();
	}

	function savePage() {
		document.getElementById("footer").style.width="522px";
		var pdf = new jsPDF('p', 'pt', 'letter')

		// source can be HTML-formatted string, or a reference
		// to an actual DOM element from which the text will be scraped.
		, source = document.getElementById("toPrint");

		margins = {
			top: 10,
			bottom: 10,
			left: 40,
			width: 522
		};
		
		// all coords and widths are in jsPDF instance's declared units
		// 'inches' in this case
		pdf.fromHTML(
		  	source // HTML string or DOM elem ref.
		  	, margins.left // x coord
		  	, margins.top // y coord
		  	, {
		  		'width': margins.width // max width of content on PDF
		  	},
		  	function (dispose) {
		  	  // dispose: object with X, Y of the last line add to the PDF
		  	  //          this allow the insertion of new lines after html
		  	  pdf.save('test.pdf');
		  	},
		  	margins
		  	)
	}

	$(window).load(function() {
	    // Find a <table> element with id="myTable":
	    var table = document.getElementById("fillMeUp");

		// Create an empty <tr> element and add it to the 1st position of the table:
		
		var postData = 
		{
			//"cedula": document.getElementById('loginform_barcode').value
		}
		var dataString = JSON.stringify(postData);
		$.ajax({
			method: "POST",
			data: {action:dataString},
			url: '../ajax/getListaSemana',
			success: function(data){
				var json = JSON.parse(data);
				
				while(json['1'].length != 0){
					// Create an empty <tr> element and add it to the 1st position of the table:
					var row = table.insertRow(-1);

					if(typeof json['1'][0] !== 'undefined'){
						row.insertCell(0).innerHTML = 
						"<p>Nombre: " + json['1'][0]["Nombre"] + "</p><p>Organización: " +json['1'][0]["Inst"]+ "</p><p >Horas acumuladas: " +json['1'][0]["tiempo"]+ "</p>";
					}
					if(typeof json['2'][0] !== 'undefined'){
						row.insertCell(1).innerHTML = 
						"<p>Nombre: " + json['2'][0]["Nombre"] + "</p><p>Organización: " +json['2'][0]["Inst"]+ "</p><p >Horas acumuladas: " +json['2'][0]["tiempo"]+ "</p>";
					}
					if(typeof json['3'][0] !== 'undefined'){
						row.insertCell(2).innerHTML = 
						"<p>Nombre: " + json['3'][0]["Nombre"] + "</p><p>Organización: " +json['3'][0]["Inst"]+ "</p><p >Horas acumuladas: " +json['3'][0]["tiempo"]+ "</p>";
					}
					if(typeof json['4'][0] !== 'undefined'){
						row.insertCell(3).innerHTML = 
						"<p>Nombre: " + json['4'][0]["Nombre"] + "</p><p>Organización: " +json['4'][0]["Inst"]+ "</p><p >Horas acumuladas: " +json['4'][0]["tiempo"]+ "</p>";
					}
					if(typeof json['5'][0] !== 'undefined'){
						row.insertCell(4).innerHTML = 
						"<p>Nombre: " + json['5'][0]["Nombre"] + "</p><p>Organización: " +json['5'][0]["Inst"]+ "</p><p >Horas acumuladas: " +json['5'][0]["tiempo"]+ "</p>";
					}

					json['1'].splice(0,1);
					json['2'].splice(0,1);
					json['3'].splice(0,1);
					json['4'].splice(0,1);
					json['5'].splice(0,1);
				}

			},
			error: function(e){
				console.log('error: ' + e);
			}
		});
	});
</script>
{% endblock %}
